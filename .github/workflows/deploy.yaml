name: API Deployement

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    
env: 
  DOTNET_IMAGE: '${{ secrets.DOCKER_HUB_USERNAME }}/sample-app'
  DOTNET_TAG: latest
  DOTNET_VERSION: 8.0.100
  UBUNTU_VERSION: ubuntu-22.04

jobs: 
  
  build-project:
    
    name: DOTNET Build
    
    runs-on: ubuntu-22.04

    # strategy:
    #   matrix:
    #     ubuntu: ['ubuntu-22.04']
    #     dotnet: ['8.0.100']
    
    steps:
  
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version:  ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
    
    - name: Build Docker image
      run: |
        pwd
        ls
        dotnet publish ./API-DOTNET.csproj /t:PublishContainer -r linux-x64

  build-image :

    name: Docker build and push

    runs-on: ubuntu-22.04

    steps:

      - name: Login to Docker Hub
        run: docker login -u maadoowl -p ${{ secrets.DOCKERHUB_TOKEN }} docker.io
             
      - name: Build and push Docker image
        run: |
          docker login -u maadoowl -p ${{ secrets.DOCKERHUB_TOKEN }} docker.io
          docker build -t madoowl${{ env.DOTNET_IMAGE }}:latest .
          docker push madoowl${{ env.DOTNET_IMAGE }}:latest     
